@model IEnumerable<Mvc.Models.mvcSellerBlankets>

@{
    ViewBag.Title = "Available Products";
}

<div class="products-container">
    <!-- Background Elements -->
    <div class="bg-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
        <div class="shape shape-4"></div>
    </div>

    <!-- Header Section -->
    <div class="header-section">
        <div class="container">
            <div class="header-content">
                <div class="brand-header">
                    <div class="logo">
                        <div class="logo-icon">
                            <svg width="32" height="32" viewBox="0 0 48 48" fill="none">
                                <path d="M24 4L44 14V34L24 44L4 34V14L24 4Z" stroke="currentColor" stroke-width="2" stroke-linejoin="round" />
                                <path d="M24 4V44" stroke="currentColor" stroke-width="2" />
                                <path d="M4 14L44 34" stroke="currentColor" stroke-width="2" />
                                <path d="M44 14L4 34" stroke="currentColor" stroke-width="2" />
                            </svg>
                        </div>
                        <h1>Cozy Comfort</h1>
                    </div>
                    <div class="user-info">
                        <span class="welcome-text">Welcome, @Session["UserName"]</span>
                        <a href="@Url.Action("Logout", "Login")" class="btn-logout">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                <polyline points="16,17 21,12 16,7"></polyline>
                                <line x1="21" y1="12" x2="9" y2="12"></line>
                            </svg>
                            Logout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <div class="header-left">
                    <h2 class="page-title">Available Products</h2>
                    <nav class="breadcrumb-nav">
                        <a href="@Url.Action("Home", "Customer")" class="breadcrumb-link">Dashboard</a>
                        <span class="breadcrumb-separator">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="9,18 15,12 9,6"></polyline>
                            </svg>
                        </span>
                        <span class="breadcrumb-current">Available Products</span>
                    </nav>
                </div>
                <div class="header-actions">
                    <a href="@Url.Action("Home", "Customer")" class="btn-secondary">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="15,18 9,12 15,6"></polyline>
                        </svg>
                        Back to Dashboard
                    </a>
                    <a href="@Url.Action("PurchaseHistory", "Customer")" class="btn-primary">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1"></path>
                        </svg>
                        Purchase History
                    </a>
                </div>
            </div>

            <!-- Products Grid -->
            @if (Model != null && Model.Any())
            {
                <div class="products-grid">
                    @foreach (var item in Model)
                    {
                        <div class="product-card">
                            <div class="card-glow"></div>
                            <div class="card-header">
                                <h3 class="product-name">@Html.DisplayFor(modelItem => item.Name)</h3>
                                <div class="product-status">
                                    @if (item.Quantity > 0)
                                    {
                                        <span class="status-badge available">In Stock</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge unavailable">Out of Stock</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="product-description">
                                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                                </div>
                                <div class="product-details">
                                    <div class="detail-item">
                                        <span class="detail-label">Available Quantity</span>
                                        <span class="detail-value quantity">@Html.DisplayFor(modelItem => item.Quantity)</span>
                                    </div>
                                    <div class="detail-item">
                                        <span class="detail-label">Price per Unit</span>
                                        <span class="detail-value price">$@Html.DisplayFor(modelItem => item.Price)</span>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                @if (item.Quantity > 0)
                                {
                                    <a href="@Url.Action("PurchaseProduct", "Customer", new { id = item.BlanketId })" class="btn-purchase">
                                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <circle cx="9" cy="21" r="1"></circle>
                                            <circle cx="20" cy="21" r="1"></circle>
                                            <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                                        </svg>
                                        Purchase Now
                                    </a>
                                }
                                else
                                {
                                    <button class="btn-disabled" disabled>
                                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <circle cx="12" cy="12" r="10"></circle>
                                            <line x1="15" y1="9" x2="9" y2="15"></line>
                                            <line x1="9" y1="9" x2="15" y2="15"></line>
                                        </svg>
                                        Out of Stock
                                    </button>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-state-content">
                        <div class="empty-state-icon">
                            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                                <circle cx="12" cy="12" r="10"></circle>
                                <path d="M12 6v6l4 2"></path>
                            </svg>
                        </div>
                        <h3>No Products Available</h3>
                        <p>There are currently no products available for purchase. Please check back later or contact support for assistance.</p>
                        <a href="@Url.Action("Home", "Customer")" class="btn-primary">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                <polyline points="9,22 9,12 15,12 15,22"></polyline>
                            </svg>
                            Return to Dashboard
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Toast Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast toast-success">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22,4 12,14.01 9,11.01"></polyline>
        </svg>
        <span>@TempData["SuccessMessage"]</span>
        <button class="toast-close" onclick="this.parentElement.style.display='none'">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="toast toast-error">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
        </svg>
        <span>@TempData["ErrorMessage"]</span>
        <button class="toast-close" onclick="this.parentElement.style.display='none'">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
}

<style>
/* Resetting default styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Setting up font and body background */
body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    background: #fff7f0;
    overflow-x: hidden;
}

/* Main container */
.products-container {
    min-height: 100vh;
    position: relative;
}

/* Background shapes for decorative effect */
.bg-shapes {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 1;
    pointer-events: none;
}

.shape {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(255, 142, 83, 0.15) 0%, rgba(199, 21, 133, 0.15) 100%);
    backdrop-filter: blur(12px);
    animation: float 8s ease-in-out infinite;
}

.shape-1 {
    width: 320px;
    height: 320px;
    top: 5%;
    left: 5%;
    animation-delay: 0s;
}

.shape-2 {
    width: 220px;
    height: 220px;
    top: 40%;
    right: 10%;
    animation-delay: 2s;
}

.shape-3 {
    width: 160px;
    height: 160px;
    bottom: 20%;
    left: 15%;
    animation-delay: 4s;
}

.shape-4 {
    width: 120px;
    height: 120px;
    top: 20%;
    right: 30%;
    animation-delay: 6s;
}

/* Animation keyframes */
keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-30px) rotate(180deg);
    }
}

/* Header section styling */
.header-section {
    position: relative;
    z-index: 10;
    background: linear-gradient(135deg, #ff6b6b 0%, #ff8e53 50%, #c71585 100%);
    color: white;
    padding: 1.8rem 0;
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.12);
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.8rem;
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.brand-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

.logo {
    display: flex;
    align-items: center;
    gap: 0.8rem;
}

.logo-icon {
    color: white;
    opacity: 0.9;
}

.logo h1 {
    font-size: 1.85rem;
    font-weight: 700;
    margin: 0;
}

.user-info {
    display: flex;
    align-items: center;
    gap: 1.8rem;
}

.welcome-text {
    font-size: 1rem;
    opacity: 0.9;
}

.btn-logout {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.6rem 1.2rem;
    background: rgba(255, 255, 255, 0.15);
    color: white;
    text-decoration: none;
    border-radius: 10px;
    font-size: 0.95rem;
    font-weight: 500;
    transition: all 0.4s ease;
    backdrop-filter: blur(15px);
}

.btn-logout:hover {
    background: rgba(255, 255, 255, 0.25);
    transform: translateY(-2px);
}

/* Main content styling */
.main-content {
    position: relative;
    z-index: 5;
    padding: 2.5rem 0;
}

.page-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 3rem;
    gap: 2.5rem;
}

.header-left {
    flex: 1;
}

.page-title {
    font-size: 2.75rem;
    font-weight: 700;
    color: #2d1a3f;
    margin-bottom: 0.6rem;
}

.breadcrumb-nav {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    font-size: 0.95rem;
}

.breadcrumb-link {
    color: #ff8e53;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
}

.breadcrumb-link:hover {
    color: #e07b39;
}

.breadcrumb-separator {
    color: #6b5b7a;
}

.breadcrumb-current {
    color: #4a3c5b;
}

.header-actions {
    display: flex;
    gap: 1.2rem;
    flex-shrink: 0;
}

.btn-primary, .btn-secondary {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.9rem 1.8rem;
    border-radius: 14px;
    font-size: 0.95rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.4s ease;
    border: none;
    cursor: pointer;
}

.btn-primary {
    background: linear-gradient(135deg, #ff8e53 0%, #c71585 100%);
    color: white;
    box-shadow: 0 6px 20px rgba(255, 142, 83, 0.3);
}

.btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 30px rgba(255, 142, 83, 0.4);
}

.btn-secondary {
    background: #f5e7e2;
    color: #4a3c5b;
    border: 2px solid #f3e8e6;
}

.btn-secondary:hover {
    background: #f0d8d2;
    border-color: #e8d3cf;
    transform: translateY(-2px);
}

/* Products grid styling */
.products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
    gap: 2.5rem;
    margin-bottom: 2.5rem;
}

.product-card {
    position: relative;
    background: rgba(255, 255, 255, 0.92);
    border-radius: 24px;
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.7);
    transition: all 0.5s ease;
    backdrop-filter: blur(15px);
}

.product-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 25px 70px rgba(0, 0, 0, 0.15);
}

.product-card:hover .card-glow {
    opacity: 1;
}

.card-glow {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255, 142, 83, 0.15) 0%, rgba(199, 21, 133, 0.15) 100%);
    opacity: 0;
    transition: opacity 0.5s ease;
    pointer-events: none;
}

.card-header {
    padding: 1.8rem 1.8rem 1.2rem 1.8rem;
    border-bottom: 1px solid #f5e7e2;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1.2rem;
}

.product-name {
    font-size: 1.35rem;
    font-weight: 700;
    color: #2d1a3f;
    margin: 0;
    flex: 1;
}

.product-status {
    flex-shrink: 0;
}

.status-badge {
    padding: 0.5rem 1rem;
    border-radius: 24px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.status-badge.available {
    background: rgba(220, 38, 38, 0.15);
    color: #b91c1c;
    border: 1px solid rgba(220, 38, 38, 0.25);
}

.status-badge.unavailable {
    background: rgba(199, 21, 133, 0.15);
    color: #831843;
    border: 1px solid rgba(199, 21, 133, 0.25);
}

.card-body {
    padding: 1.2rem 1.8rem 1.8rem 1.8rem;
}

.product-description {
    margin-bottom: 1.8rem;
}

.product-description p {
    color: #4a3c5b;
    line-height: 1.7;
    margin: 0;
}

.product-details {
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
}

.detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.9rem 1.2rem;
    background: #fffaf7;
    border-radius: 14px;
}

.detail-label {
    font-size: 0.95rem;
    color: #6b5b7a;
    font-weight: 500;
}

.detail-value {
    font-weight: 700;
    font-size: 1.05rem;
}

.detail-value.quantity {
    color: #c71585;
    background: rgba(199, 21, 133, 0.15);
    padding: 0.3rem 0.9rem;
    border-radius: 24px;
    font-size: 0.95rem;
}

.detail-value.price {
    color: #d97706;
    font-size: 1.15rem;
}

.card-footer {
    padding: 1.2rem 1.8rem 1.8rem 1.8rem;
    border-top: 1px solid #f5e7e2;
}

.btn-purchase, .btn-disabled {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.6rem;
    padding: 1.2rem 1.8rem;
    border-radius: 14px;
    font-size: 1.05rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.4s ease;
    border: none;
    cursor: pointer;
}

.btn-purchase {
    background: linear-gradient(135deg, #ff8e53 0%, #c71585 100%);
    color: white;
    box-shadow: 0 6px 20px rgba(255, 142, 83, 0.3);
}

.btn-purchase:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 30px rgba(255, 142, 83, 0.4);
}

.btn-disabled {
    background: #f5e7e2;
    color: #6b5b7a;
    cursor: not-allowed;
}

/* Empty state styling */
.empty-state {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
    padding: 3.5rem 1.8rem;
}

.empty-state-content {
    text-align: center;
    max-width: 500px;
}

.empty-state-icon {
    margin: 0 auto 2.5rem auto;
    width: 64px;
    height: 64px;
    color: #6b5b7a;
}

.empty-state h3 {
    font-size: 1.75rem;
    font-weight: 700;
    color: #2d1a3f;
    margin-bottom: 1.2rem;
}

.empty-state p {
    color: #4a3c5b;
    line-height: 1.7;
    margin-bottom: 2.5rem;
}

/* Toast styling */
.toast {
    position: fixed;
    top: 2rem;
    right: 2rem;
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1.2rem 1.8rem;
    border-radius: 14px;
    font-size: 0.95rem;
    font-weight: 500;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.12);
    z-index: 1000;
    backdrop-filter: blur(15px);
    animation: slideIn 0.4s ease;
}

.toast-success {
    background: rgba(220, 38, 38, 0.9);
    color: white;
    border: 1px solid rgba(220, 38, 38, 0.25);
}

.toast-error {
    background: rgba(199, 21, 133, 0.9);
    color: white;
    border: 1px solid rgba(199, 21, 133, 0.25);
}

.toast-close {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    padding: 0;
    margin-left: 0.6rem;
    opacity: 0.8;
    transition: opacity 0.3s ease;
}

.toast-close:hover {
    opacity: 1;
}

/* Animation keyframes */
keyframes slideIn {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Mobile Responsiveness */
media screen and (max-width: 1024px) {
    .page-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1.8rem;
    }

    .header-actions {
        width: 100%;
        justify-content: flex-start;
    }

    .products-grid {
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 1.8rem;
    }
}

media screen and (max-width: 768px) {
    .container {
        padding: 0 1.2rem;
    }

    .header-content {
        flex-direction: column;
        gap: 1.2rem;
    }

    .brand-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1.2rem;
        width: 100%;
    }

    .user-info {
        align-self: stretch;
        justify-content: space-between;
    }

    .page-title {
        font-size: 2.25rem;
    }

    .header-actions {
        flex-direction: column;
        gap: 0.9rem;
    }

    .btn-primary, .btn-secondary {
        justify-content: center;
    }

    .products-grid {
        grid-template-columns: 1fr;
        gap: 1.8rem;
    }

    .toast {
        right: 1.2rem;
        left: 1.2rem;
        top: 1.2rem;
    }
}

media screen and (max-width: 480px) {
    .main-content {
        padding: 1.8rem 0;
    }

    .page-header {
        margin-bottom: 2.5rem;
    }

    .page-title {
        font-size: 1.85rem;
    }

    .logo h1 {
        font-size: 1.65rem;
    }

    .card-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.9rem;
    }

    .product-status {
        align-self: flex-end;
    }
}
</style>