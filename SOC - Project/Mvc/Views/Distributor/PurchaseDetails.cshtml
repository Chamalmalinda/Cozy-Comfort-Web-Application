@model Mvc.Models.mvcPurchaseModel

@{
    ViewBag.Title = "Purchase Details";
}

<div class="page-container">
    <!-- Background Elements -->
    <div class="bg-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
    </div>

    <!-- Modern Navbar -->
    <nav class="modern-navbar">
        <div class="nav-container">
            <div class="nav-brand">
                <div class="brand-logo">
                    <svg width="32" height="32" viewBox="0 0 48 48" fill="none">
                        <path d="M24 4L44 14V34L24 44L4 34V14L24 4Z" stroke="currentColor" stroke-width="2" stroke-linejoin="round" />
                        <path d="M24 4V44" stroke="currentColor" stroke-width="2" />
                        <path d="M4 14L44 34" stroke="currentColor" stroke-width="2" />
                        <path d="M44 14L4 34" stroke="currentColor" stroke-width="2" />
                    </svg>
                    <span>Cozy Comfort</span>
                </div>
                <span class="portal-tag">Distributor Portal</span>
            </div>
            <div class="nav-actions">
                <div class="user-info">
                    <span class="welcome-text">Welcome, @Session["UserName"]</span>
                </div>
                <a href="@Url.Action("Logout", "Login")" class="logout-btn">
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                        <polyline points="16,17 21,12 16,7"></polyline>
                        <line x1="21" y1="12" x2="9" y2="12"></line>
                    </svg>
                    Logout
                </a>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-content">
        <div class="content-container">
            <!-- Header Section -->
            <div class="page-header">
                <div class="header-content">
                    <h1 class="page-title">Purchase Details</h1>
                    <nav class="breadcrumb-nav">
                        <a href="@Url.Action("Home", "Distributor")" class="breadcrumb-link">Dashboard</a>
                        <span class="breadcrumb-separator">/</span>
                        <a href="@Url.Action("PurchaseHistory", "Distributor")" class="breadcrumb-link">Purchase History</a>
                        <span class="breadcrumb-separator">/</span>
                        <span class="breadcrumb-current">Order #@Model.PurchaseId</span>
                    </nav>
                </div>
                <a href="@Url.Action("PurchaseHistory", "Distributor")" class="back-btn">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M19 12H5"></path>
                        <path d="M12 19l-7-7 7-7"></path>
                    </svg>
                    Back to History
                </a>
            </div>

            <!-- Purchase Details Cards -->
            <div class="details-grid">
                <!-- Order Info Card -->
                <div class="detail-card order-card">
                    <div class="card-header">
                        <div class="order-info">
                            <h2 class="order-number">Order #@Model.PurchaseId</h2>
                            <div class="status-badge success">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                                    <polyline points="22,4 12,14.01 9,11.01"></polyline>
                                </svg>
                                Completed
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="info-grid">
                            <div class="info-item">
                                <span class="info-label">Buyer</span>
                                <span class="info-value">@Model.UserName</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Order Date</span>
                                <span class="info-value">@DateTime.Now.ToString("MMM dd, yyyy")</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Card -->
                <div class="detail-card product-card">
                    <div class="card-header">
                        <h3 class="card-title">Product Details</h3>
                    </div>
                    <div class="card-body">
                        <div class="product-info">
                            <div class="product-details">
                                <h4 class="product-name">@Model.Productname</h4>
                                <p class="product-description">Premium quality blanket from CozyComfort</p>
                            </div>
                            <div class="quantity-badge">
                                <span class="quantity-number">@Model.PurchasedQuantity</span>
                                <span class="quantity-label">units</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Summary Card -->
                <div class="detail-card summary-card">
                    <div class="card-header">
                        <h3 class="card-title">Order Summary</h3>
                    </div>
                    <div class="card-body">
                        <div class="summary-item">
                            <div class="item-details">
                                <span class="item-name">@Model.Productname</span>
                                <span class="item-quantity">Quantity: @Model.PurchasedQuantity units</span>
                            </div>
                            <div class="item-pricing">
                                <span class="unit-price">$@((Model.TotalAmount / Model.PurchasedQuantity).ToString("F2")) per unit</span>
                                <span class="total-price">$@Model.TotalAmount.ToString("F2")</span>
                            </div>
                        </div>

                        <div class="summary-divider"></div>

                        <div class="summary-stats">
                            <div class="stat-item">
                                <span class="stat-label">Items Purchased</span>
                                <span class="stat-value">@Model.PurchasedQuantity</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Unit Price</span>
                                <span class="stat-value">$@((Model.TotalAmount / Model.PurchasedQuantity).ToString("F2"))</span>
                            </div>
                        </div>

                        <div class="total-section">
                            <div class="total-row">
                                <span class="total-label">Total Amount</span>
                                <span class="total-amount">$@Model.TotalAmount.ToString("F2")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <a href="@Url.Action("PurchaseHistory", "Distributor")" class="btn btn-secondary">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M8 6h13"></path>
                        <path d="M8 12h13"></path>
                        <path d="M8 18h13"></path>
                        <path d="M3 6h.01"></path>
                        <path d="M3 12h.01"></path>
                        <path d="M3 18h.01"></path>
                    </svg>
                    View All Orders
                </a>
                <a href="@Url.Action("AvailableProducts", "Distributor")" class="btn btn-primary">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M12 5v14"></path>
                        <path d="M5 12h14"></path>
                    </svg>
                    Make Another Purchase
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22,4 12,14.01 9,11.01"></polyline>
        </svg>
        <span>@TempData["SuccessMessage"]</span>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-error">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
        </svg>
        <span>@TempData["ErrorMessage"]</span>
    </div>
}

<style>
/* Resetting default styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Setting up font and overflow */
body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    background: #fef8f5;
    overflow-x: hidden;
}

/* Main container with sunset-inspired background */
.page-container {
    min-height: 100vh;
    position: relative;
}

/* Background shapes for decorative effect */
.bg-shapes {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 1;
    pointer-events: none;
}

.shape {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(255, 107, 107, 0.15), rgba(199, 21, 133, 0.15));
    backdrop-filter: blur(12px);
    animation: float 10s ease-in-out infinite;
}

.shape-1 {
    width: 320px;
    height: 320px;
    top: 5%;
    right: 8%;
    animation-delay: 0s;
}

.shape-2 {
    width: 220px;
    height: 220px;
    top: 55%;
    left: 5%;
    animation-delay: 3s;
}

.shape-3 {
    width: 170px;
    height: 170px;
    bottom: 10%;
    right: 15%;
    animation-delay: 6s;
}

keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-35px) rotate(180deg);
    }
}

/* Modern Navbar */
.modern-navbar {
    position: relative;
    z-index: 10;
    background: rgba(255, 255, 255, 0.92);
    backdrop-filter: blur(15px);
    border-bottom: 1px solid rgba(255, 142, 83, 0.2);
    padding: 1.2rem 0;
}

.nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.nav-brand {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.brand-logo {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    color: #ff6b6b;
    font-weight: 700;
    font-size: 1.3rem;
}

.portal-tag {
    background: linear-gradient(135deg, #ff8e53, #c71585);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
}

.nav-actions {
    display: flex;
    align-items: center;
    gap: 1.8rem;
}

.user-info {
    color: #4a3c5b;
    font-weight: 500;
}

.logout-btn {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    color: #dc2626;
    text-decoration: none;
    padding: 06rem 1.2rem;
    border-radius Whistartifacts 10px;
    transition: all 0.3s ease;
    font-weight: 500;
}

.logout-btn:hover {
    background: rgba(255, 142, 83, 0.15);
    color: #b91c1c;
}

/* Main Content */
.main-content {
    position: relative;
    z-index: 2;
    padding: 2.5rem 0;
}

.content-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 2rem;
}

/* Header Section */
.page-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2.5rem;
    gap: 2rem;
}

.header-content {
    flex: 1;
}

.page-title {
    font-size: 2.75rem;
    font-weight: 700;
    color: #2d1a3f;
    margin-bottom: 0.6rem;
}

.breadcrumb-nav {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    color: #4a3c5b;
    font-size: 0.95rem;
}

.breadcrumb-link {
    color: #ff8e53;
    text-decoration: none;
    transition: color 0.3s ease;
}

.breadcrumb-link:hover {
    color: #e0763b;
}

.breadcrumb-separator {
    opacity: 0.6;
}

.breadcrumb-current {
    font-weight: 600;
    color: #2d1a3f;
}

.back-btn {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    color: #4a3c5b;
    text-decoration: none;
    padding: 0.8rem 1.8rem;
    background: #fff7f0;
    border-radius: 14px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    font-weight: 500;
    border: 1px solid #f3e8e6;
}

.back-btn:hover {
    color: #ff6b6b;
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
}

/* Details Grid */
.details-grid {
    display: flex;
    flex-direction: column;
    gap: 1.8rem;
    margin-bottom: 2.5rem;
}

.detail-card {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(255, 142, 83, 0.2);
    overflow: hidden;
    transition: all 0.4s ease;
}

.detail-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.12);
}

.card-header {
    padding: 1.8rem 2.2rem;
    background: linear-gradient(135deg, #fff7f0, #ffede5);
    border-bottom: 1px solid #f3e8e6;
}

.card-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: #2d1a3f;
    margin: 0;
}

.card-body {
    padding: 2.2rem;
}

/* Order Card */
.order-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1.2rem;
}

.order-number {
    font-size: 1.6rem;
    font-weight: 700;
    color: #ff6b6b;
    margin: 0;
}

.status-badge {
    display: flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.6rem 1.2rem;
    border-radius: 20px;
    font-weight: 500;
    font-size: 0.95rem;
}

.status-badge.success {
    background: rgba(220, 38, 38, 0.15);
    color: #b91c1c;
    border: 1px solid rgba(220, 38, 38, 0.25);
}

.info-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2.2rem;
}

.info-item {
    display: flex;
    flex-direction: column;
    gap: 0.6rem;
}

.info-label {
    color: #4a3c5b;
    font-size: 0.95rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.info-value {
    color: #2d1a3f;
    font-size: 1.15rem;
    font-weight: 600;
}

/* Product Card */
.product-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2.2rem;
}

.product-name {
    font-size: 1.6rem;
    font-weight: 600;
    color: #ff8e53;
    margin: 0 0 0.6rem 0;
}

.product-description {
    color: #4a3c5b;
    margin: 0;
}

.quantity-badge {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.2rem 1.8rem;
    background: linear-gradient(135deg, #ff8e53, #c71585);
    color: white;
    border-radius: 14px;
    text-align: center;
}

.quantity-number {
    font-size: 1.85rem;
    font-weight: 700;
    line-height: 1;
}

.quantity-label {
    font-size: 0.9rem;
    opacity: 0.9;
}

/* Summary Card */
.summary-item {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 2.2rem;
    margin-bottom: 1.8rem;
}

.item-details {
    display: flex;
    flex-direction: column;
    gap: 0.6rem;
}

.item-name {
    font-weight: 600;
    color: #2d1a3f;
    font-size: 1.15rem;
}

.item-quantity {
    color: #4a3c5b;
    font-size: 0.95rem;
}

.item-pricing {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.3rem;
}

.unit-price {
    color: #4a3c5b;
    font-size: 0.95rem;
}

.total-price {
    font-weight: 700;
    color: #2d1a3f;
    font-size: 1.15rem;
}

.summary-divider {
    height: 1px;
    background: linear-gradient(to right, transparent, #f3e8e6, transparent);
    margin: 1.8rem 0;
}

.summary-stats {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.2rem;
    margin-bottom: 1.8rem;
}

.stat-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem;
    background: #fff7f0;
    border-radius: 10px;
}

.stat-label {
    color: #4a3c5b;
    font-weight: 500;
    font-size: 0.95rem;
}

.stat-value {
    color: #2d1a3f;
    font-weight: 600;
}

.total-section {
    background: linear-gradient(135deg, #fff7f0, #ffede5);
    padding: 1.8rem;
    border-radius: 14px;
    border: 2px solid #f3e8e6;
}

.total-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.total-label {
    font-size: 1.3rem;
    font-weight: 600;
    color: #2d1a3f;
}

.total-amount {
    font-size: 1.85rem;
    font-weight: 700;
    color: #d97706;
}

/* Action Buttons */
.action-buttons {
    display: flex;
    justify-content: space-between;
    gap: 1.2rem;
}

.btn {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1.2rem 2.2rem;
    border-radius: 14px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.4s ease;
    border: none;
    cursor: pointer;
    font-size: 1rem;
}

.btn-secondary {
    background: #fff7f0;
    color: #4a3c5b;
    border: 2px solid #f3e8e6;
}

.btn-secondary:hover {
    color: #2d1a3f;
    border-color: #f0d8d2;
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12);
}

.btn-primary {
    background: linear-gradient(135deg, #ff8e53, #c71585);
    color: white;
    border: 2px solid transparent;
}

.btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(255, 142, 83, 0.4);
}

/* Alert Messages */
.alert {
    position: fixed;
    top: 2rem;
    right: 2rem;
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 1.2rem 1.8rem;
    border-radius: 14px;
    font-size: 0.95rem;
    font-weight: 500;
    z-index: 1000;
    max-width: 400px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.12);
}

.alert-success {
    background: rgba(220, 38, 38, 0.9);
    color: white;
    border: 1px solid rgba(220, 38, 38, 0.25);
}

.alert-error {
    background: rgba(199, 21, 133, 0.9);
    color: white;
    border: 1px solid rgba(199, 21, 133, 0.25);
}

/* Mobile Responsiveness */
media (max-width: 768px) {
    .nav-container {
        padding: 0 1.2rem;
    }

    .nav-actions {
        flex-direction: column;
        gap: 0.6rem;
        align-items: flex-end;
    }

    .main-content {
        padding: 1.5rem 0;
    }

    .content-container {
        padding: 0 1.2rem;
    }

    .page-header {
        flex-direction: column;
        align-items: stretch;
        gap: 1.5rem;
    }

    .info-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .product-info {
        flex-direction: column;
        align-items: flex-start;
        gap: 1.5rem;
    }

    .summary-item {
        flex-direction: column;
        gap: 1rem;
    }

    .item-pricing {
        align-items: flex-start;
    }

    .summary-stats {
        grid-template-columns: 1fr;
        gap: 0.8rem;
    }

    .action-buttons {
        flex-direction: column;
        gap: 0.8rem;
    }

    .btn {
        justify-content: center;
    }
}
</style>