```csharp
@model IEnumerable<Mvc.Models.mvcBlanketsModel>

@{
    ViewBag.Title = "Available Products";
}

<div class="products-container">
    <!-- Background Elements -->
    <div class="bg-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
        <div class="shape shape-4"></div>
    </div>

    <!-- Header Section -->
    <div class="header-section">
        <div class="container">
            <div class="header-content">
                <div class="brand-header">
                    <div class="logo">
                        <div class="logo-icon">
                            <svg width="32" height="32" viewBox="0 0 48 48" fill="none">
                                <path d="M24 4L44 14V34L24 44L4 34V14L24 4Z" stroke="currentColor" stroke-width="2" stroke-linejoin="round" />
                                <path d="M24 4V44" stroke="currentColor" stroke-width="2" />
                                <path d="M4 14L44 34" stroke="currentColor" stroke-width="2" />
                                <path d="M44 14L4 34" stroke="currentColor" stroke-width="2" />
                            </svg>
                        </div>
                        <h1>Cozy Comfort</h1>
                    </div>
                    <div class="user-info">
                        <span class="welcome-text">Welcome, @Session["UserName"]</span>
                        <a href="@Url.Action("Logout", "Login")" class="btn-logout">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                <polyline points="16,17 21,12 16,7"></polyline>
                                <line x1="21" y1="12" x2="9" y2="12"></line>
                            </svg>
                            Logout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <div class="header-left">
                    <h2 class="page-title">Available Products</h2>
                    <nav class="breadcrumb-nav">
                        <a href="@Url.Action("Home", "Seller")" class="breadcrumb-link">Dashboard</a>
                        <span class="breadcrumb-separator">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="9,18 15,12 9,6"></polyline>
                            </svg>
                        </span>
                        <span class="breadcrumb-current">Available Products</span>
                    </nav>
                </div>
                <div class="header-actions">
                    <a href="@Url.Action("Home", "Seller")" class="btn-secondary">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="15,18 9,12 15,6"></polyline>
                        </svg>
                        Back to Dashboard
                    </a>
                    <a href="@Url.Action("PurchaseHistory", "Seller")" class="btn-primary">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1"></path>
                        </svg>
                        Purchase History
                    </a>
                </div>
            </div>

            <!-- Products Grid -->
            @if (Model != null && Model.Any())
            {
                <div class="products-grid">
                    @foreach (var item in Model)
                    {
                        <div class="product-card">
                            <div class="card-glow"></div>
                            <div class="card-header">
                                <h3 class="product-name">@Html.DisplayFor(modelItem => item.Name)</h3>
                                <div class="product-status">
                                    @if (item.Quantity > 0)
                                    {
                                        <span class="status-badge available">In Stock</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge unavailable">Out of Stock</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="product-description">
                                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                                </div>
                                <div class="product-details">
                                    <div class="detail-item">
                                        <span class="detail-label">Available Quantity</span>
                                        <span class="detail-value quantity">@Html.DisplayFor(modelItem => item.Quantity)</span>
                                    </div>
                                    <div class="detail-item">
                                        <span class="detail-label">Price per Unit</span>
                                        <span class="detail-value price">$@Html.DisplayFor(modelItem => item.Price)</span>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                @if (item.Quantity > 0)
                                {
                                    <a href="@Url.Action("PurchaseProduct", "Seller", new { id = item.BlanketId })" class="btn-purchase">
                                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <circle cx="9" cy="21" r="1"></circle>
                                            <circle cx="20" cy="21" r="1"></circle>
                                            <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                                        </svg>
                                        Purchase Now
                                    </a>
                                }
                                else
                                {
                                    <button class="btn-disabled" disabled>
                                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <circle cx="12" cy="12" r="10"></circle>
                                            <line x1="15" y1="9" x2="9" y2="15"></line>
                                            <line x1="9" y1="9" x2="15" y2="15"></line>
                                        </svg>
                                        Out of Stock
                                    </button>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-state-content">
                        <div class="empty-state-icon">
                            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                                <circle cx="12" cy="12" r="10"></circle>
                                <path d="M12 6v6l4 2"></path>
                            </svg>
                        </div>
                        <h3>No Products Available</h3>
                        <p>There are currently no products available for purchase. Please check back later or contact support for assistance.</p>
                        <a href="@Url.Action("Home", "Seller")" class="btn-primary">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                <polyline points="9,22 9,12 15,12 15,22"></polyline>
                            </svg>
                            Return to Dashboard
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Toast Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast toast-success">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22,4 12,14.01 9,11.01"></polyline>
        </svg>
        <span>@TempData["SuccessMessage"]</span>
        <button class="toast-close" onclick="this.parentElement.style.display='none'">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="toast toast-error">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
        </svg>
        <span>@TempData["ErrorMessage"]</span>
        <button class="toast-close" onclick="this.parentElement.style.display='none'">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
        background: #fff7ed;
        overflow-x: hidden;
    }

    .products-container {
        min-height: 100vh;
        position: relative;
    }

    .bg-shapes {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: 1;
        pointer-events: none;
    }

    .shape {
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(135deg, rgba(253, 186, 116, 0.2) 0%, rgba(251, 113, 133, 0.2) 100%);
        backdrop-filter: blur(12px);
        animation: float 10s ease-in-out infinite;
        opacity: 0.7;
    }

    .shape-1 {
        width: 280px;
        height: 280px;
        top: 10%;
        left: 8%;
        animation-delay: 0s;
    }

    .shape-2 {
        width: 220px;
        height: 220px;
        top: 35%;
        right: 12%;
        animation-delay: 2.5s;
    }

    .shape-3 {
        width: 180px;
        height: 180px;
        bottom: 15%;
        left: 20%;
        animation-delay: 5s;
    }

    .shape-4 {
        width: 120px;
        height: 120px;
        top: 25%;
        right: 25%;
        animation-delay: 7.5s;
    }

    keyframes float {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
        }
        50% {
            transform: translateY(-40px) rotate(180deg);
        }
    }

    .header-section {
        position: relative;
        z-index: 10;
        background: linear-gradient(135deg, #f472b6 0%, #fb923c 100%);
        color: white;
        padding: 2rem 0;
        box-shadow: 0 6px 30px rgba(0, 0, 0, 0.15);
    }

    .container {
        max-width: 1280px;
        margin: 0 auto;
        padding: 0 2rem;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .brand-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }

    .logo {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .logo-icon {
        color: white;
        opacity: 0.95;
    }

    .logo h1 {
        font-size: 2rem;
        font-weight: 800;
        margin: 0;
        letter-spacing: -0.02em;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 2rem;
    }

    .welcome-text {
        font-size: 1.1rem;
        opacity: 0.95;
        font-weight: 500;
    }

    .btn-logout {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1.5rem;
        background: rgba(255, 255, 255, 0.15);
        color: white;
        text-decoration: none;
        border-radius: 10px;
        font-size: 0.95rem;
        font-weight: 600;
        transition: all 0.4s ease;
        backdrop-filter: blur(12px);
    }

    .btn-logout:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: scale(1.05);
    }

    .main-content {
        position: relative;
        z-index: 5;
        padding: 3rem 0;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 3rem;
        gap: 2rem;
    }

    .header-left {
        flex: 1;
    }

    .page-title {
        font-size: 2.75rem;
        font-weight: 800;
        color: #2d1b4e;
        margin-bottom: 0.75rem;
    }

    .breadcrumb-nav {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 1rem;
    }

    .breadcrumb-link {
        color: #f472b6;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s ease;
    }

    .breadcrumb-link:hover {
        color: #ed64a6;
    }

    .breadcrumb-separator {
        color: #9ca3af;
    }

    .breadcrumb-current {
        color: #6b7280;
        font-weight: 500;
    }

    .header-actions {
        display: flex;
        gap: 1.5rem;
        flex-shrink: 0;
    }

    .btn-primary, .btn-secondary {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 2rem;
        border-radius: 14px;
        font-size: 1rem;
        font-weight: 700;
        text-decoration: none;
        transition: all 0.4s ease;
        border: none;
        cursor: pointer;
    }

    .btn-primary {
        background: linear-gradient(135deg, #fb923c 0%, #f472b6 100%);
        color: white;
        box-shadow: 0 6px 20px rgba(251, 146, 60, 0.3);
    }

    .btn-primary:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 30px rgba(251, 146, 60, 0.4);
    }

    .btn-secondary {
        background: white;
        color: #6b7280;
        border: 2px solid #fed7aa;
    }

    .btn-secondary:hover {
        background: #fff7ed;
        border-color: #fb923c;
        transform: scale(1.05);
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
        gap: 2.5rem;
        margin-bottom: 3rem;
    }

    .product-card {
        position: relative;
        background: white;
        border-radius: 24px;
        overflow: hidden;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.9);
        transition: all 0.5s ease;
        backdrop-filter: blur(15px);
    }

    .product-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
    }

    .product-card:hover .card-glow {
        opacity: 0.85;
    }

    .card-glow {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(253, 186, 116, 0.15) 0%, rgba(251, 113, 133, 0.15) 100%);
        opacity: 0;
        transition: opacity 0.5s ease;
        pointer-events: none;
    }

    .card-header {
        padding: 2rem 2rem 1.5rem 2rem;
        border-bottom: 1px solid #fef3c7;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1.5rem;
    }

    .product-name {
        font-size: 1.5rem;
        font-weight: 800;
        color: #2d1b4e;
        margin: 0;
        flex: 1;
    }

    .product-status {
        flex-shrink: 0;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 999px;
        font-size: 0.85rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.06em;
    }

    .status-badge.available {
        background: rgba(219, 39, 119, 0.1);
        color: #9d174d;
        border: 1px solid rgba(219, 39, 119, 0.3);
    }

    .status-badge.unavailable {
        background: rgba(234, 88, 12, 0.1);
        color: #9a3412;
        border: 1px solid rgba(234, 88, 12, 0.3);
    }

    .card-body {
        padding: 1.5rem 2rem 2rem 2rem;
    }

    .product-description {
        margin-bottom: 2rem;
    }

    .product-description p {
        color: #4b5563;
        line-height: 1.7;
        margin: 0;
    }

    .product-details {
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
    }

    .detail-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        background: #fff7ed;
        border-radius: 14px;
    }

    .detail-label {
        font-size: 1rem;
        color: #4b5563;
        font-weight: 600;
    }

    .detail-value {
        font-weight: 700;
        font-size: 1.1rem;
    }

    .detail-value.quantity {
        color: #db2777;
        background: rgba(219, 39, 119, 0.1);
        padding: 0.5rem 1rem;
        border-radius: 999px;
        font-size: 1rem;
    }

    .detail-value.price {
        color: #ea580c;
        font-size: 1.2rem;
    }

    .card-footer {
        padding: 1.5rem 2rem 2rem 2rem;
        border-top: 1px solid #fef3c7;
    }

    .btn-purchase, .btn-disabled {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        padding: 1.25rem 2rem;
        border-radius: 14px;
        font-size: 1.1rem;
        font-weight: 700;
        text-decoration: none;
        transition: all 0.4s ease;
        border: none;
        cursor: pointer;
    }

    .btn-purchase {
        background: linear-gradient(135deg, #fb923c 0%, #db2777 100%);
        color: white;
        box-shadow: 0 6px 20px rgba(219, 39, 119, 0.3);
    }

    .btn-purchase:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 30px rgba(219, 39, 119, 0.4);
    }

    .btn-disabled {
        background: #fee2e2;
        color: #9ca3af;
        cursor: not-allowed;
    }

    .empty-state {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 450px;
        padding: 4rem 2rem;
    }

    .empty-state-content {
        text-align: center;
        max-width: 600px;
    }

    .empty-state-icon {
        margin: 0 auto 2.5rem auto;
        width: 72px;
        height: 72px;
        color: #9ca3af;
    }

    .empty-state h3 {
        font-size: 1.75rem;
        font-weight: 800;
        color: #2d1b4e;
        margin-bottom: 1.25rem;
    }

    .empty-state p {
        color: #4b5563;
        line-height: 1.7;
        margin-bottom: 2.5rem;
    }

    .toast {
        position: fixed;
        top: 2.5rem;
        right: 2.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1.25rem 2rem;
        border-radius: 14px;
        font-size: 1rem;
        font-weight: 600;
        box-shadow: 0 12px 50px rgba(0, 0, 0, 0.15);
        z-index: 1000;
        backdrop-filter: blur(15px);
        animation: slideIn 0.4s ease;
    }

    .toast-success {
        background: rgba(219, 39, 119, 0.95);
        color: white;
        border: 1px solid rgba(219, 39, 119, 0.4);
    }

    .toast-error {
        background: rgba(234, 88, 12, 0.95);
        color: white;
        border: 1px solid rgba(234, 88, 12, 0.4);
    }

    .toast-close {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 0;
        margin-left: 0.75rem;
        opacity: 0.85;
        transition: opacity 0.3s ease;
    }

    .toast-close:hover {
        opacity: 1;
    }

    keyframes slideIn {
        from {
            transform: translateX(120%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    /* Mobile Responsiveness */
    media screen and (max-width: 1024px) {
        .page-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 2rem;
        }

        .header-actions {
            width: 100%;
            justify-content: flex-start;
        }

        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 2rem;
        }
    }

    media screen and (max-width: 768px) {
        .container {
            padding: 0 1.5rem;
        }

        .header-content {
            flex-direction: column;
            gap: 1.5rem;
        }

        .brand-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1.5rem;
            width: 100%;
        }

        .user-info {
            align-self: stretch;
            justify-content: space-between;
        }

        .page-title {
            font-size: 2.25rem;
        }

        .header-actions {
            flex-direction: column;
            gap: 1rem;
        }

        .btn-primary, .btn-secondary {
            justify-content: center;
        }

        .products-grid {
            grid-template-columns: 1fr;
            gap: 2rem;
        }

        .toast {
            right: 1.5rem;
            left: 1.5rem;
            top: 1.5rem;
        }
    }

    media screen and (max-width: 480px) {
        .main-content {
            padding: 2rem 0;
        }

        .page-header {
            margin-bottom: 2.5rem;
        }

        .page-title {
            font-size: 2rem;
        }

        .logo h1 {
            font-size: 1.75rem;
        }

        .card-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .product-status {
            align-self: flex-end;
        }
    }
</style>
```